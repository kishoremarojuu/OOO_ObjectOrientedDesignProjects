

# SERVER SETTING
server.port=8099

# spring.mvc.view.prefix= WEB-INF/
#spring.mvc.view.suffix=.jsp

spring.datasource.platform=mysql
spring.database.driverClassName=com.mysql.jdbc.Driver
# DISABLING DEFAULT EROR PAGE
#server.error.whitelabel.enabled=false


# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://database-2.cfvfwjvjcghn.us-east-1.rds.amazonaws.com:3306/mydatabase
spring.datasource.username=master
spring.datasource.password=mypassword


# Connection url for the database "netgloo_blog"

# Username and password

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
# spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
